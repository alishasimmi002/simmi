import pygame
import sys
import random

# Initialize pygame
pygame.init()

# Screen dimensions
WIDTH, HEIGHT = 400, 600

# Colors
WHITE = (255, 255, 255)
BLUE = (135, 206, 250)
GREEN = (0, 255, 0)
RED = (255, 0, 0)

# Create screen and clock
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Flappy Bird - Easy Version")
clock = pygame.time.Clock()

# Bird settings
bird = pygame.Rect(100, HEIGHT // 2, 30, 30)
bird_speed = 0
GRAVITY = 0.5
FLAP_STRENGTH = -10

# Pipe settings
pipe_width = 60
pipe_gap = 200
pipes = []
pipe_speed = 3

# Score
score = 0
font = pygame.font.Font(None, 36)

def create_pipe():
    height = random.randint(100, HEIGHT - pipe_gap - 100)
    top_pipe = pygame.Rect(WIDTH, 0, pipe_width, height)
    bottom_pipe = pygame.Rect(WIDTH, height + pipe_gap, pipe_width, HEIGHT - (height + pipe_gap))
    return top_pipe, bottom_pipe

def move_pipes(pipes):
    for pipe in pipes:
        pipe.x -= pipe_speed
    return [pipe for pipe in pipes if pipe.x + pipe_width > 0]

def draw_pipes(pipes):
    for pipe in pipes:
        pygame.draw.rect(screen, GREEN, pipe)

def check_collision():
    for pipe in pipes:
        if bird.colliderect(pipe):
            return True
    if bird.top <= 0 or bird.bottom >= HEIGHT:
        return True
    return False

def display_score():
    score_text = font.render(f"Score: {score}", True, WHITE)
    screen.blit(score_text, (10, 10))

# Main game loop
running = True
pipe_timer = 0
while running:
    screen.fill(BLUE)

    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                bird_speed = FLAP_STRENGTH

    # Bird movement
    bird_speed += GRAVITY
    bird.y += bird_speed

    # Pipe management
    pipe_timer += 1
    if pipe_timer > 100:
        pipes.extend(create_pipe())
        pipe_timer = 0

    pipes = move_pipes(pipes)

    # Collision check
    if check_collision():
        print(f"Game Over! Final Score: {score}")
        running = False

    # Draw everything
    pygame.draw.rect(screen, RED, bird)
    draw_pipes(pipes)

    # Update score
    for pipe in pipes:
        if pipe.x + pipe_width == bird.x:
            score += 1

    display_score()

    # Update display
    pygame.display.flip()
    clock.tick(30)

pygame.quit()
sys.exit()
